{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Resultado","data","simulacao","response","color","count","className","Value","input","output","FaturamentoForm","handleSubmit","handleRestart","info","useState","val","setVal","onSubmit","e","preventDefault","value","onChange","target","onClick","Label","props","children","toLocaleString","maximumFractionDigits","minimumFractionDigits","App","content","initialState","isLoading","simulacoes","setData","setCount","error","map","i","href","md","size","offset","Object","assign","fetch","then","resp","json","result","unshift","catch","err","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c34057ce.chunk.js","sourcesContent":["import * as rs from 'reactstrap';\n\nimport React, { useState } from 'react';\n\nconst ENDPOINT = \"https://ooh86uy8d7.execute-api.us-east-1.amazonaws.com/dev?faturamento-anual=\"\n\nfunction App() {\n  const initialState = {isLoading: false, simulacoes: []};\n  const [data, setData] = useState(initialState);\n  const [count, setCount] = useState(1);\n\n  const reiniciar = () => {\n    setData(initialState)\n    setCount(1);\n  }\n\n  const handleSubmit = (val) => {\n    if (!val) {\n      return;\n    }\n    data.isLoading = true;\n    setData(Object.assign({}, data))\n    fetch(ENDPOINT + val)\n      .then((resp) => resp.json().then((result) => {\n\n        const simulacao = {\n          response: result,\n          count: count\n        };\n\n        setCount(count+1);\n\n        let simulacoes = data.simulacoes || [];\n        simulacoes.unshift(simulacao);\n\n        setData({\n          isLoading: false,\n          simulacoes: simulacoes\n        });\n\n      }))\n      .catch((err) => setData({error: \"Erro ao se comunicar com API: \" + err.toString()}));\n\n  }\n\n  let info = null;\n  let content = null;\n\n  if (data.error) {\n    info = <p>{data.error}</p>;\n  }\n\n  if (data.isLoading) {\n    info = <p>Carregando dados da API...</p>;\n  }\n\n  content = data.simulacoes.map(i => <Resultado simulacao={i} key={i.count}/>)\n\n  return (\n    <>\n    <rs.Navbar color=\"dark\">Calculadora Imposto Dev Remoto\n\n    <a href=\"https://github.com/rpagliuca/react-calculadora-imposto-dev-remoto\">Sobre</a>\n\n    <a href=\"https://github.com/rpagliuca/react-calculadora-imposto-dev-remoto\">Fork me on GitHub</a></rs.Navbar>\n\n    <rs.Col md={{size:6, offset: 3}}>\n      <FaturamentoForm handleSubmit={handleSubmit} handleRestart={reiniciar} info={info}/>\n      {content}\n    </rs.Col>\n    </>\n  );\n\n}\n\nfunction Resultado({simulacao}) {\n\n  const data = simulacao;\n  const response = data.response;\n\n  return (\n    <rs.Container>\n\n          <rs.Badge color=\"secondary\">Simulação {data.count}</rs.Badge>\n          <rs.Card className=\"card-simulacao\">\n            <rs.CardBody>\n              <rs.ListGroup>\n                <rs.ListGroupItem>\n                  <Label>Faturamento anual (R$)</Label> <Value>{response.input[\"faturamento-anual-em-reais\"]}</Value>\n                </rs.ListGroupItem>\n                <rs.ListGroupItem>\n                  <Label>Impostos totais (R$)</Label> <Value>{response.output[\"imposto-total-em-reais\"]}</Value>\n                </rs.ListGroupItem>\n                <rs.ListGroupItem>\n                  <Label>Impostos totais em percentual (%)</Label> <Value>{response.output[\"imposto-total-percentual\"]}</Value>\n                </rs.ListGroupItem>\n                <rs.ListGroupItem>\n                  <Label>Faturamento anual após impostos (R$)</Label> <Value>{response.output[\"faturamento-menos-impostos\"]}</Value>\n                </rs.ListGroupItem>\n                <rs.ListGroupItem>\n              <rs.Badge>Impostos detalhados</rs.Badge>\n              <rs.ListGroup>\n                <rs.ListGroupItem>\n                  <Label>Imposto de renda pessoa física (R$)</Label> <Value>{response.output[\"impostos-detalhados\"][\"imposto-renda-pessoa-fisica\"]}</Value>\n                </rs.ListGroupItem>\n                <rs.ListGroupItem>\n                  <Label>Imposto Simples Nacional (R$)</Label> <Value>{response.output[\"impostos-detalhados\"][\"imposto-simples-nacional\"]}</Value>\n                </rs.ListGroupItem>\n                <rs.ListGroupItem>\n                  <Label>INSS (R$)</Label> <Value>{response.output[\"impostos-detalhados\"][\"inss\"]}</Value>\n                </rs.ListGroupItem>\n              </rs.ListGroup>\n                </rs.ListGroupItem>\n              </rs.ListGroup>\n\n\n            </rs.CardBody>\n          </rs.Card>\n\n    </rs.Container>\n  )\n}\n\nfunction FaturamentoForm({handleSubmit, handleRestart, info}) {\n  const [val, setVal] = useState(\"\");\n  return (\n    <rs.Container>\n      <rs.Badge color=\"secondary\">Nova simulação</rs.Badge>\n      <rs.Card>\n        <rs.CardBody>\n          <rs.Form onSubmit={(e) => {handleSubmit(val); e.preventDefault(); setVal(\"\");}}>\n            <rs.FormGroup>\n              <rs.Label>Qual é o seu faturamento anual (R$)?</rs.Label>\n              <rs.Input value={val} onChange={(e) => setVal(e.target.value)}/>\n            </rs.FormGroup>\n            <span className=\"message-info\">{info}</span>\n            <rs.Button color=\"light\">Calcular</rs.Button>\n            <rs.Button color=\"light\" onClick={handleRestart}>Reiniciar</rs.Button>\n          </rs.Form>\n        </rs.CardBody>\n      </rs.Card>\n    </rs.Container>\n  );\n}\n\nfunction Label(props) {\n  return <span className=\"item-label\">{props.children}</span>\n}\n\nfunction Value(props) {\n  return <span className=\"item-value\">{props.children.toLocaleString('pt-BR', {maximumFractionDigits: 2, minimumFractionDigits: 2})}</span>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}